Search.setIndex({envversion:47,filenames:["bits","bits.errors","datatypes","datatypes.bits","datatypes.bits.errors","datatypes.integers","datatypes.integers.error","demo","index","main","modules","testing"],objects:{"":{main:[9,0,0,"-"]},"bits.Bit":{Bit:[0,1,1,""],CryptoBit:[0,1,1,""],PlainBit:[0,1,1,""]},"bits.Bit.Bit":{"__add__":[0,2,1,""],"__and__":[0,2,1,""],"__invert__":[0,2,1,""],"__mul__":[0,2,1,""],"__neg__":[0,2,1,""],"__or__":[0,2,1,""],"__xor__":[0,2,1,""],AND:[0,2,1,""],NOT:[0,2,1,""],OR:[0,2,1,""],XOR:[0,2,1,""],debug__printAsBoolean:[0,2,1,""]},"bits.Bit.CryptoBit":{"__eq__":[0,2,1,""],"__repr__":[0,2,1,""],AND:[0,2,1,""],NOT:[0,2,1,""],OR:[0,2,1,""],XOR:[0,2,1,""],debug__printAsBoolean:[0,2,1,""],decrypt:[0,2,1,""],refresh:[0,2,1,""],setNoise:[0,2,1,""]},"bits.Bit.PlainBit":{"__eq__":[0,2,1,""],"__repr__":[0,2,1,""],AND:[0,2,1,""],NOT:[0,2,1,""],OR:[0,2,1,""],XOR:[0,2,1,""],debug__printAsBoolean:[0,2,1,""],encrypt:[0,2,1,""]},"bits.errors":{BitwiseOperationError:[1,0,0,"-"],InstantiationError:[1,0,0,"-"],OpNotAllowedError:[1,0,0,"-"]},"bits.errors.BitwiseOperationError":{BitwiseOperationError:[1,3,1,""]},"bits.errors.InstantiationError":{InstantiationError:[1,3,1,""]},"bits.errors.OpNotAllowedError":{OpNotAllowedError:[1,3,1,""]},"datatypes.bits":{Bit:[3,0,0,"-"]},"datatypes.bits.Bit":{Bit:[3,1,1,""],CryptoBit:[3,1,1,""],PlainBit:[3,1,1,""]},"datatypes.bits.Bit.Bit":{"__add__":[3,2,1,""],"__and__":[3,2,1,""],"__invert__":[3,2,1,""],"__mul__":[3,2,1,""],"__neg__":[3,2,1,""],"__or__":[3,2,1,""],"__xor__":[3,2,1,""],AND:[3,2,1,""],NOT:[3,2,1,""],OR:[3,2,1,""],XOR:[3,2,1,""],debug__printAsBoolean:[3,2,1,""]},"datatypes.bits.Bit.CryptoBit":{"__eq__":[3,2,1,""],"__repr__":[3,2,1,""],AND:[3,2,1,""],NOT:[3,2,1,""],OR:[3,2,1,""],XOR:[3,2,1,""],debug__printAsBoolean:[3,2,1,""],decrypt:[3,2,1,""],refresh:[3,2,1,""],setNoise:[3,2,1,""]},"datatypes.bits.Bit.PlainBit":{"__eq__":[3,2,1,""],"__repr__":[3,2,1,""],AND:[3,2,1,""],NOT:[3,2,1,""],OR:[3,2,1,""],XOR:[3,2,1,""],debug__printAsBoolean:[3,2,1,""],encrypt:[3,2,1,""]},"datatypes.bits.errors":{BitwiseOperationError:[4,0,0,"-"],InstantiationError:[4,0,0,"-"],OpNotAllowedError:[4,0,0,"-"]},"datatypes.bits.errors.BitwiseOperationError":{BitwiseOperationError:[4,3,1,""]},"datatypes.bits.errors.InstantiationError":{InstantiationError:[4,3,1,""]},"datatypes.bits.errors.OpNotAllowedError":{OpNotAllowedError:[4,3,1,""]},"datatypes.integers":{Int8:[5,0,0,"-"],UInt8:[5,0,0,"-"],UInt:[5,0,0,"-"],Utility:[5,0,0,"-"]},"datatypes.integers.Int8":{Int8:[5,1,1,""]},"datatypes.integers.Int8.Int8":{"__abs__":[5,2,1,""],"__add__":[5,2,1,""],"__and__":[5,2,1,""],"__div__":[5,2,1,""],"__eq__":[5,2,1,""],"__ge__":[5,2,1,""],"__gt__":[5,2,1,""],"__invert__":[5,2,1,""],"__le__":[5,2,1,""],"__len__":[5,2,1,""],"__lshift__":[5,2,1,""],"__lt__":[5,2,1,""],"__mod__":[5,2,1,""],"__neg__":[5,2,1,""],"__or__":[5,2,1,""],"__repr__":[5,2,1,""],"__rshift__":[5,2,1,""],"__sub__":[5,2,1,""],"__xor__":[5,2,1,""],debug_showValue:[5,2,1,""],decrypt:[5,2,1,""],encrypt:[5,2,1,""],toUInt8:[5,2,1,""]},"datatypes.integers.UInt":{UInt:[5,1,1,""]},"datatypes.integers.UInt.UInt":{"__abs__":[5,2,1,""],"__add__":[5,2,1,""],"__eq__":[5,2,1,""],"__len__":[5,2,1,""],"__sub__":[5,2,1,""],debug_showValue:[5,2,1,""]},"datatypes.integers.UInt8":{UInt8:[5,1,1,""]},"datatypes.integers.UInt8.UInt8":{"__abs__":[5,2,1,""],"__add__":[5,2,1,""],"__and__":[5,2,1,""],"__div__":[5,2,1,""],"__eq__":[5,2,1,""],"__ge__":[5,2,1,""],"__gt__":[5,2,1,""],"__invert__":[5,2,1,""],"__le__":[5,2,1,""],"__len__":[5,2,1,""],"__lshift__":[5,2,1,""],"__lt__":[5,2,1,""],"__mod__":[5,2,1,""],"__mul__":[5,2,1,""],"__neg__":[5,2,1,""],"__or__":[5,2,1,""],"__repr__":[5,2,1,""],"__rshift__":[5,2,1,""],"__sub__":[5,2,1,""],"__xor__":[5,2,1,""],debug_showValue:[5,2,1,""],decrypt:[5,2,1,""],encrypt:[5,2,1,""],showValue:[5,2,1,""],toInt8:[5,2,1,""]},"datatypes.integers.Utility":{completeAddOnOneBit:[5,4,1,""],completeSubOnOneBit:[5,4,1,""]},"datatypes.integers.error":{BadRightOperand:[6,0,0,"-"],OverflowError:[6,0,0,"-"]},"datatypes.integers.error.BadRightOperand":{BadRightOperand:[6,3,1,""]},"datatypes.integers.error.OverflowError":{OverflowError:[6,3,1,""]},"demo.ImageUtils":{decode:[7,4,1,""],decrypt:[7,4,1,""],dump:[7,4,1,""],encode:[7,4,1,""],encrypt:[7,4,1,""],load:[7,4,1,""],negate:[7,4,1,""]},"testing.TestBitsMethods":{TestBitsMethods:[11,1,1,""]},"testing.TestBitsMethods.TestBitsMethods":{test_and:[11,2,1,""],test_or:[11,2,1,""],test_xor:[11,2,1,""]},"testing.TestInt8Methods":{TestInt8Methods:[11,1,1,""]},"testing.TestInt8Methods.TestInt8Methods":{setUp:[11,2,1,""],test_int8_abs:[11,2,1,""],test_int8_addition:[11,2,1,""],test_int8_debugshowValue:[11,2,1,""],test_int8_division:[11,2,1,""],test_int8_eq_ne:[11,2,1,""],test_int8_ge:[11,2,1,""],test_int8_gt:[11,2,1,""],test_int8_le:[11,2,1,""],test_int8_lshift:[11,2,1,""],test_int8_lt:[11,2,1,""],test_int8_mod:[11,2,1,""],test_int8_rshift:[11,2,1,""],test_int8_subtraction:[11,2,1,""]},"testing.TestUInt8Methods":{TestUInt8Methods:[11,1,1,""]},"testing.TestUInt8Methods.TestUInt8Methods":{setUp:[11,2,1,""],test_uint8_addition:[11,2,1,""],test_uint8_debugshowValue:[11,2,1,""],test_uint8_division:[11,2,1,""],test_uint8_eq_ne:[11,2,1,""],test_uint8_ge:[11,2,1,""],test_uint8_gt:[11,2,1,""],test_uint8_le:[11,2,1,""],test_uint8_lshift:[11,2,1,""],test_uint8_lt:[11,2,1,""],test_uint8_mod:[11,2,1,""],test_uint8_rshift:[11,2,1,""],test_uint8_subtraction:[11,2,1,""]},"testing.TestUIntMethods":{TestUIntMethods:[11,1,1,""]},"testing.TestUIntMethods.TestUIntMethods":{setUp:[11,2,1,""],test_uint_addition:[11,2,1,""],test_uint_debugshowValue:[11,2,1,""],test_uint_subtraction:[11,2,1,""]},bits:{Bit:[0,0,0,"-"]},demo:{ImageUtils:[7,0,0,"-"]},main:{result:[9,5,1,""]},testing:{TestBitsMethods:[11,0,0,"-"],TestInt8Methods:[11,0,0,"-"],TestUInt8Methods:[11,0,0,"-"],TestUIntMethods:[11,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","method","Python method"],"3":["py","exception","Python exception"],"4":["py","function","Python function"],"5":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:method","3":"py:exception","4":"py:function","5":"py:data"},terms:{"__abs__":5,"__add__":[0,3,5],"__and__":[0,3,5],"__bit":[0,3],"__div__":5,"__eq__":[0,3,5],"__ge__":5,"__gt__":5,"__init__":[],"__invert__":[0,3,5],"__le__":5,"__len__":5,"__lshift__":5,"__lt__":5,"__mod__":5,"__mul__":[0,3,5],"__neg__":[0,3,5],"__or__":[0,3,5],"__repr__":[0,3,5],"__rshift__":5,"__sub__":5,"__xor__":[0,3,5],"_bit":[],"abstract":[0,3],"boolean":[0,3],"byte":5,"case":[5,7,11],"char":5,"class":[0,3,5,11],"default":[0,3],"function":[0,3,5,7],"int":[0,3,5],"long":5,"new":5,"return":[0,3,5,7],"short":5,"true":[0,3,5],abl:[0,3,5],abov:[0,3],absolut:5,access:5,add:5,addit:5,alic:7,all:7,allow:[0,3],also:5,alwai:[0,3,5],anoth:5,appar:[0,3],append:5,argument:5,arithmet:5,arrai:5,arrayi:[],arrayx:[],attribut:[0,3],awar:5,badrightoperand:[],base:[0,1,3,4,6,11],between:[0,3,5,7],binari:5,bitwis:5,bitwiseoperationerror:[],bob:7,borrowin:5,both:5,call:[0,3],can:5,cannot:[0,3,5],carri:5,carryout:5,charact:5,chose:5,code:5,compar:[0,3,5],complement:5,completeaddononebit:5,completesubononebit:5,consequ:5,consid:5,constructor:[],contain:[0,3],convent:5,correspond:7,could:5,creat:11,creation:[0,3],crypto:[0,3],cryptobit:[0,3,5],data:[5,7],debug:[0,3,5],debug__printasboolean:[0,3],debug_showvalu:[5,9],decid:5,decod:7,decrypt:[0,3,5,7],defin:[0,3],depth:7,detect:5,differ:5,directli:[0,3],divid:5,divis:5,doe:11,dump:7,easili:[0,3,5],els:[],emul:[0,3],encod:7,encrypt:[0,3,5,7],equal:[0,3,5],equat:[0,3],error:[],euclidian:5,everi:5,exampl:5,except:[0,1,3,4,5,6],execut:11,failur:9,fake:5,fals:[0,3,5],file:7,fine:5,first:5,firstbit:5,fixeds:5,forbid:[0,3],form:5,from:[5,7],gener:[0,3],given:5,goal:[0,3],greater:5,handl:5,have:[5,11],how:5,howev:[0,3,5],ignor:5,imag:7,incorrect:5,index:[],initi:5,insert:5,instanc:11,instanti:[0,3],instantiationerror:[],int1:9,int2:9,int3:9,int8:[],intcarri:[],integ:[],invert:7,irrelev:5,isssu:5,itself:5,just:[0,3],know:5,last:5,least:5,left:5,length:5,lesser:5,load:7,logic:[0,3],lsb:5,made:5,mai:5,main:[],make:5,matrix:7,mean:5,member:[0,3],messag:[0,1,3,4,6],method:[0,3,5,11],methodnam:11,might:[0,3,5],minuend:5,more:[0,3,5],most:5,msb:5,much:5,multipl:5,multipli:5,multrecurr:[],must:7,name:11,negat:7,newuint:[],nois:[0,3],none:5,note:[0,3,5],object:7,occur:5,onc:5,onli:[0,3,5],oper:[0,3,5],operand:[0,3,5],opnotallowederror:[],opposit:5,option:[0,3],other:[0,3,5],otherwis:[0,3],our:[5,7],ourselv:[0,3],overflow:5,overflowerror:[],overrid:5,overridden:[0,3],overrod:[0,3],page:[],param:[0,3],paramet:[0,3,5,7],path:7,perform:[0,3,5],pickel:7,pixel:7,plain:[0,3],plainbit:[0,3,5],pleas:5,posit:5,potenti:5,print:[0,3],problem:5,product:5,properli:5,purpos:[0,3,5],python:7,rais:[0,3,5,11],random:[0,3,5],read:[0,3,5,7],real:[0,3],realiz:5,refresh:[0,3],reli:[0,3],remaind:5,repres:[0,3,5],represent:[0,3,5],reset:[0,3],rest:5,result:[0,3,5,9],retriev:7,reveal:[0,3,5],rgb:7,right:[0,3,5],rightoperand:[0,3],round:5,rst:[],rtype:[],run:9,runner:9,runtest:11,runtimeerro:5,runtimeerror:[1,4,5,6],save:7,search:[],secondbit:5,see:5,seem:5,self:[0,3,5],set:[0,3,5],setnois:[0,3],setup:11,shift:5,should:[0,3],show:5,showvalu:5,sign:5,signific:5,sinc:[0,3,5],size:[5,7],some:5,specifi:11,store:[0,3],string:7,subclass:[0,3],substract:5,subtract:5,subtrahend:5,sum:5,take:7,test:[],test_and:11,test_int8_ab:11,test_int8_addit:11,test_int8_debugshowvalu:11,test_int8_divis:11,test_int8_eq_n:11,test_int8_g:11,test_int8_gt:11,test_int8_l:11,test_int8_lshift:11,test_int8_lt:11,test_int8_mod:11,test_int8_rshift:11,test_int8_subtract:11,test_or:11,test_uint8_addit:11,test_uint8_debugshowvalu:11,test_uint8_divis:11,test_uint8_eq_n:11,test_uint8_g:11,test_uint8_gt:11,test_uint8_l:11,test_uint8_lshift:11,test_uint8_lt:11,test_uint8_mod:11,test_uint8_rshift:11,test_uint8_subtract:11,test_uint_addit:11,test_uint_debugshowvalu:11,test_uint_subtract:11,test_xor:11,testbitsmethod:[],testcas:11,testint8method:[],testnois:[],testoverflow:5,testuint8method:[],testuintmethod:[],texttestresult:9,than:5,therefor:[0,3,5],thi:[0,3,5,7],threshold:[0,3],thu:5,toint8:5,too:5,touint8:5,toward:5,transfer:7,trigger:[0,3],tupl:7,two:[0,3,5],type:[0,3,5,7],uint8:[],uint:[],unisgn:5,unittest:[9,11],unsign:5,upon:[0,3],user:5,util:[],valu:[0,3,5,7,9],valueerror:11,variabl:5,verbos:[0,3],want:5,weaken:5,well:5,were:5,when:[5,11],whether:[0,3],which:[0,3,5],wich:[],word:5,work:5,wrap:[0,3],write:[0,3,5,7],written:7,xor:[0,3,5],you:[0,3],zero:5},titles:["bits package","bits.errors package","datatypes package","datatypes.bits package","datatypes.bits.errors package","datatypes.integers package","datatypes.integers.error package","demo package","Welcome to Homomorphic Processor&#8217;s documentation!","main module","homomorphic-processor","testing package"],titleterms:{badrightoperand:6,bit:[0,1,3,4],bitwiseoperationerror:[1,4],content:[],datatyp:[2,3,4,5,6],demo:7,document:8,error:[1,4,6],homomorph:[8,10],imageutil:7,indic:[],instantiationerror:[1,4],int8:5,integ:[5,6],main:9,modul:[0,1,3,4,5,6,7,9,11],opnotallowederror:[1,4],overflowerror:6,packag:[0,1,2,3,4,5,6,7,11],processor:[8,10],submodul:[0,1,3,4,5,6,7,11],subpackag:[0,2,3,5],tabl:[],test:11,testbitsmethod:11,testint8method:11,testnois:11,testuint8method:11,testuintmethod:11,uint8:5,uint:5,util:5,welcom:8}})